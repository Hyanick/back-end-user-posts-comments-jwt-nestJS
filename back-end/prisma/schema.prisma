generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId            Int       @id @default(autoincrement())
  username          String    @db.VarChar(65)
  email             String    @unique @db.VarChar(255)
  password          String    @db.VarChar(255)
  passwordConfirm   String    @db.VarChar(255)
  firstName         String    @db.VarChar(255)
  lastName          String    @db.VarChar(255)
  birthDay          String    @db.VarChar(255)
  birthCountry      String    @db.VarChar(255)
  gender            String    @db.VarChar(255)
  adress            String    @db.VarChar(255)
  adressComplement  String    @db.VarChar(255)
  city              String    @db.VarChar(255)
  zipCode           String    @db.VarChar(255)
  phone             String    @db.VarChar(255)
  lastDateConnexion DateTime
  createAt          DateTime  @default(now())
  updateAt          DateTime  @updatedAt
  comments          Comment[] @relation("user_comments")
  Posts             Post[]    @relation("user_posts")
}

model Post {
  postId   Int       @id @default(autoincrement())
  title    String    @db.VarChar(255)
  body     String
  userId   Int
  comments Comment[] @relation("post_comments")
  user     User      @relation("user_posts", fields: [userId], references: [userId], onDelete: Cascade)
}

model Comment {
  commentId Int    @id @default(autoincrement())
  content   String @db.VarChar(255)
  postId    Int
  userId    Int
  post      Post   @relation("post_comments", fields: [postId], references: [postId], onDelete: Cascade)
  user      User   @relation("user_comments", fields: [userId], references: [userId], onDelete: Cascade)
}

model Test {
  testId Int @id @default(autoincrement())
}
